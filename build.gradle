plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
    id "org.jetbrains.kotlin.jvm"
}

def j17 = JavaVersion.VERSION_17
sourceCompatibility =
targetCompatibility = j17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
}

dependencies {

	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    //noinspection VulnerableLibrariesLocal
    implementation 'org.yaml:snakeyaml:1.33'
    implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.1'

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

loom {
    runs {
        // 添加一个新的 gradle 任务，会运行数据生成 API：“gradlew runDatagenClient”
        datagenClient {
            inherit client
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.strict-validation"

            runDir "build/datagen"
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs += [
                'src/main/generated'
            ]
            exclude 'element/~$element.xlsx'
        }
    }
}
